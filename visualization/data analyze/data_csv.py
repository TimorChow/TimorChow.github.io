import numpy as np
from sklearn.preprocessing import MinMaxScaler
history_data = []
def get_history_data():
    d1 = np.linspace(376236, 390025, 12)
    np.random.shuffle(d1)
    history_data.append(d1)
    d2 = np.linspace(356324, 367701, 12)
    np.random.shuffle(d2)
    history_data.append(d2)
    d3 = np.linspace(330517,350348,12)
    np.random.shuffle(d3)
    history_data.append(d3)
    d4 = np.linspace(350784,453740,12)
    np.random.shuffle(d4)
    history_data.append(d4)
    d5 = np.linspace(420875,489671,12)
    np.random.shuffle(d5)
    history_data.append(d5)
    d6 = np.linspace(480271,543905,12)
    np.random.shuffle(d6)
    history_data.append(d6)
    d7 = np.linspace(557890,630721,12)
    np.random.shuffle(d7)
    history_data.append(d7)
    d8 = np.linspace(652985,689108,12)
    np.random.shuffle(d8)
    history_data.append(d8)
    d9 = np.linspace(729063,790251,12)
    np.random.shuffle(d9)
    history_data.append(d9)
    d10 = np.linspace(789802,822681,12)
    np.random.shuffle(d10)
    history_data.append(d10)
    return history_data
test_data=get_history_data()
print('test_data',test_data)
test_data = np.reshape(test_data,(120,1))
def normalize_data(test_data):
    scl = MinMaxScaler()
    result=scl.fit_transform(test_data)
    return result
test_data = normalize_data(test_data)
np.savetxt('test_data.csv', test_data, delimiter = ',')
my_matrix = np.loadtxt(open("test_data.csv","rb"),delimiter=",",skiprows=0)
print(my_matrix.shape)